@page "/register"
@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<div class="container mt-2">
    <div class="card border-0 shadow-sm mx-auto" style="max-width: 800px;">
        <div class="card-body">
            <h3 class="card-title">Registrace</h3>
            <EditForm Model="registerModel" OnValidSubmit="HandleValidSubmit" FormName="register">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="Email">Email</label>
                    <InputText id="Email" class="form-control" @bind-Value="registerModel.Email" />
                    <ValidationMessage For="@(() => registerModel.Email)" />
                </div>

                <div class="form-group">
                    <label for="Password">Password</label>
                    <InputText id="Password" class="form-control" @bind-Value="registerModel.Password" />
                    <ValidationMessage For="@(() => registerModel.Password)" />
                </div>

                <div class="form-group">
                    <label for="ConfirmPassword">Confirm Password</label>
                    <InputText id="ConfirmPassword" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
                    <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                </div>

               
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private RegisterViewModel registerModel { get; set; } = new RegisterViewModel();

    private async Task HandleValidSubmit()
    {
        var result = await AccountService.RegisterAsync(registerModel);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
    }


}
