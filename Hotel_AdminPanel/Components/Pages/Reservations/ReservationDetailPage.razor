@page "/rezervace/{id:int}"
@inject IReservationService ReservationService
@inject IInvoiceService InvoiceService
@inject IPaymentService PaymentService
@inject IRoomService RoomService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="container mt-2">
    @if (reservation == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only"></span>
            </div>
            <p class="mt-2">Loading reservation details...</p>
        </div>
    }
    else
    {

        <div class="row">
            <div class="col-md-6">
                <div class="card border-0 shadow-sm mx-auto">
                    <div class="card-body">
                        <h3 class="card-title text-center mb-4 page-title">Rezervace č.@reservation.Id</h3>
                        <EditForm Model="reservation" OnValidSubmit="HandleValidSubmit" FormName="EditReservation">

                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                @if (reservation.Customer != null)
                                {
                                   
                                    <h4>Zákazník</h4>
                                    <ul class="list-group">
                                        <li class="list-group-item">
                                            <a @onclick="NavigateToCustomerDetail" style="cursor:pointer;">@reservation.Customer.FirstName @reservation.Customer.LastName - @reservation.Customer.DateOfBirth.ToShortDateString() - Číslo dokladu: @reservation.Customer.DocumentNumber</a>
                                        </li>
                                    </ul>

                                }
                                else
                                {
                                    <span class="text-muted">Zákazník nebyl nalezen.</span>
                                }
                            </div>

                            <div class="mb-3">
                                <label for="room" class="form-label">Pokoj</label>
                                <InputSelect id="room" class="form-control" @bind-Value="reservation.RoomId" disabled>
                                    <option value="">Vyber pokoj</option>
                                    @foreach (var room in rooms)
                                    {
                                        <option value="@room.Id">@room.RoomNumber - @room.RoomType.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            

                            <div class="mb-3">
                                <label for="checkIn" class="form-label">Datum příjezdu</label>
                                <InputDate id="checkIn" class="form-control" @bind-Value="reservation.CheckIn" disabled />
                            </div>

                            <div class="mb-3">
                                <label for="checkOut" class="form-label">Datum odjezdu</label>
                                <InputDate id="checkOut" class="form-control" @bind-Value="reservation.CheckOut" disabled />
                            </div>

                            <div class="mb-3">
                                <label for="price" class="form-label">Cena</label>
                                <InputNumber id="price" class="form-control" @bind-Value="reservation.TotalPrice" />
                            </div>

                            <div class="mb-3">
                                <label for="status" class="form-label">Status</label>
                                <InputSelect id="status" class="form-control" @bind-Value="reservation.ReservationStatusId">
                                    @foreach (var status in reservationStatuses)
                                    {
                                        <option value="@status.Id">@status.Name</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="mb-3">
                                <label for="adults" class="form-label">Dospělí</label>
                                <InputNumber id="adults" class="form-control" @bind-Value="reservation.Adults" />
                            </div>

                            <div class="mb-3">
                                <label for="children" class="form-label">Děti</label>
                                <InputNumber id="children" class="form-control" @bind-Value="reservation.Children" />
                            </div>

                            <div class="mb-3">
                                <label for="mealPlan" class="form-label">Stravování</label>
                                <InputSelect id="mealPlan" class="form-control" @bind-Value="reservation.MealPlanId">
                                    @foreach (var mealPlan in mealPlans)
                                    {
                                        <option value="@mealPlan.Id">@mealPlan.Name</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="mb-3">
                                <label for="specialRequest" class="form-label">Speciální požadavek</label>
                                <InputTextArea id="specialRequest" class="form-control" @bind-Value="reservation.SpecialRequest" />
                            </div>

                            <div class="mb-3">
                                <label for="adminNote" class="form-label">Poznámka zaměstnance</label>
                                <InputTextArea id="adminNote" class="form-control" @bind-Value="reservation.AdminNote" />
                            </div>

                            <div class="mb-3">
                                <label for="createdAt" class="form-label">Vytvořeno</label>
                                <InputDate id="createdAt" class="form-control" @bind-Value="reservation.CreatedAt" disabled />
                            </div>

                            <div class="mb-3">
                                <label for="updatedAt" class="form-label">Aktualizováno</label>
                                <InputDate id="updatedAt" class="form-control" @bind-Value="reservation.UpdatedAt" />
                            </div>

                            <div class="mb-3">
                                <button type="submit" class="btn btn-primary">Uložit</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>



            <div class="col-md-6">
                <div class="card border-0 shadow-sm mx-auto">
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-primary" @onclick="OpenAddGuestModal">
                            <i class="bi bi-plus"></i> Přidat hosta
                        </button>
                    </div>
                    <div class="card-body">
                        <h3 class="card-title">Hosté</h3>
                        @if (guests != null && guests.Any())
                        {
                            <div class="table-container">
                                <table class="w-100">
                                    <QuickGrid Items="guests.AsQueryable()" Pagination="paginationGuestState" Class="w-100">
                                        <PropertyColumn Title="Jméno" Property="@(x => x.FirstName)" Sortable="true"/>
                                        <PropertyColumn Title="Příjmení" Property="@(x => x.LastName)" Sortable="true"/>
                                        <PropertyColumn Title="Datum narození" Property="@(x => x.DateOfBirth.ToShortDateString())" Sortable="true"/>
                                        <TemplateColumn Title="Akce">
                                            <div class="d-inline-flex">
                                                <button class="btn text-primary" @onclick="() => OpenEditGuestModal(context.Id)">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn text-danger" @onclick="() => DeleteGuest(context.Id)">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </TemplateColumn>

                                    </QuickGrid>
                                    <Paginator State="paginationGuestState" />
                                </table>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">Žádní hosté nejsou přiřazeni.</p>
                        }
                    </div>
                </div>
                <div class="card border-0 shadow-sm mx-auto mt-5">
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-primary" @onclick="OpenAddInvoiceModal">
                            <i class="bi bi-plus"></i> Přidat Fakturu
                        </button>
                    </div>
                    <div class="card-body">
                        <h3 class="card-title">Faktury</h3>
                        @if (invoices != null)
                        {
                            <div class="table-container">
                                <table class="w-100">
                                    <QuickGrid Items="invoices.AsQueryable()" Pagination="paginationInvoiceState" Class="w-100">
                                        <TemplateColumn Title="Stav">
                                            <div class="d-inline-flex">
                                                <span class="badge bg-@(context.IsPaid ? "success" : "danger")">
                                                    @(context.IsPaid ? "Zaplacena" : "Nezaplacena")
                                                </span>
                                            </div>
                                        </TemplateColumn>

                                        <PropertyColumn Title="Splatnosti" Property="@(x => x.DueDate.ToShortDateString())" Sortable="true"/>
                                        <PropertyColumn Title="Měna" Property="@(x => x.Currency)" Sortable="true"/>
                                        <PropertyColumn Title="Cena" Property="@(x => x.Price)" Sortable="true"/>
                                        <TemplateColumn Title="Akce">
                                            <div class="d-inline-flex">
                                                <button class="btn text-primary" @onclick="() => OpenEditInvoiceModal(context.Id)">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn text-danger" @onclick="() => DeleteInvoice(context.Id)">
                                                    <i class="bi bi-trash"></i>
                                                </button>

                                            </div>
                                        </TemplateColumn>
                                    </QuickGrid>
                                    <Paginator State="paginationInvoiceState" />
                                </table>
                            </div>
                        }

                        else
                        {
                            <p class="text-muted">Žádná faktura není přiřazena k této rezervaci.</p>
                        }
                    </div>

                </div>
             
            </div>

        </div>
   
    }
</div>



<InvoiceModal 
    IsVisible="@isEditInvoiceModalVisible" 
    OnClose="CloseEditInvoiceModal" 
    Reservations="reservations" 
    InvoiceId="invoiceIdToEdit" 
    IsEditMode="true" />

<InvoiceModal 
    IsVisible="@isAddInvoiceModalVisible" 
    OnClose="CloseAddInvoiceModal" 
    Reservations="reservations" 
    InvoiceId="0" 
    IsEditMode="false" />

<GuestModal IsVisible="@isAddGuestModalVisible"
            OnClose="CloseAddGuestModal"
            ReservationId="Id"
            GuestId="null" />

<GuestModal IsVisible="@isEditGuestModalVisible"
            OnClose="CloseEditGuestModal"
            ReservationId="Id"
            GuestId="@guestIdToEdit" />

<DeleteModal 
    Title="@modalTitle" 
    ActionType="@(isDeletingGuest ? "DeleteGuest" : "DeleteInvoice")" 
    IsVisible="@isDeleteModalVisible" 
    OnClose="CloseDeleteModal" />

@code {
    [Parameter]
    public int Id { get; set; }

    private Reservation reservation = new Reservation();

    private List<ReservationStatus> reservationStatuses = new List<ReservationStatus>();
    private List<MealPlan> mealPlans = new List<MealPlan>();
    private List<Room> rooms = new List<Room>();
    private List<Reservation> reservations = new List<Reservation>();
    private List<Invoice> invoices = new List<Invoice>();
    private List<Guest> guests = new List<Guest>();

    private PaginationState paginationInvoiceState = new PaginationState() { ItemsPerPage = 5 };
    private PaginationState paginationGuestState = new PaginationState() { ItemsPerPage = 5 };

    private bool isDeleteModalVisible = false;
    private bool isEditGuestModalVisible = false;
    private bool isEditInvoiceModalVisible = false;
    private bool isAddGuestModalVisible = false;
    private bool isAddInvoiceModalVisible = false;


    private int guestIdToEdit;
    private int guestIdToDelete;
    private int invoiceIdToEdit;
    private int invoiceIdToDelete;


    private string modalTitle;
    private bool isDeletingGuest;




    private void DeleteInvoice(int id)
    {
        invoiceIdToDelete = id;
        modalTitle = "Smazání faktury";
        isDeletingGuest = false;

        isDeleteModalVisible = true;
    }

    private void DeleteGuest(int id)
    {
        guestIdToDelete = id;
        isDeleteModalVisible = true;
        modalTitle = "Smazání hosta";
        isDeletingGuest = true; // Určuje, že se maže host
    }

    private async Task CloseDeleteModal(bool result)
    {
        isDeleteModalVisible = false;


        if (result)
        {
            if (invoiceIdToDelete != 0)
            {
                await InvoiceService.DeleteInvoiceAsync(invoiceIdToDelete);
                invoices = await InvoiceService.GetInvoiceByReservationIdAsync(Id);
            }
            else
            {
                await ReservationService.DeleteGuestAsync(guestIdToDelete);
                guests = await ReservationService.GetGuestsByReservationIdAsync(Id);
            }
        }
    }




    private void OpenAddInvoiceModal()
    {
        isAddInvoiceModalVisible = true;
        isEditInvoiceModalVisible = false;
    }

    private void OpenAddGuestModal()
    {
        isAddGuestModalVisible = true;
        isEditGuestModalVisible = false;
    }

    private void OpenEditGuestModal(int guestId)
    {
        guestIdToEdit = guestId;
        isEditGuestModalVisible = true;
        isAddGuestModalVisible = false;
    }


    private void OpenEditInvoiceModal(int invoiceId)
    {
        invoiceIdToEdit = invoiceId;
        isEditInvoiceModalVisible = true;
        isAddInvoiceModalVisible = false;
    }






    private void CloseAddInvoiceModal()
    {
        isAddInvoiceModalVisible = false;
        //handle refresh
    }


    private void CloseAddGuestModal(bool result)
    {
        isAddGuestModalVisible = false;
    }

    private void CloseEditGuestModal(bool result)
    {
        isEditGuestModalVisible = false;
    }



    private async Task CloseEditInvoiceModal(bool result)
    {
        isEditInvoiceModalVisible = false;
        invoices = await InvoiceService.GetInvoiceByReservationIdAsync(Id);
    }

    protected override async Task OnInitializedAsync()
    {
        reservation = await ReservationService.GetReservationByIdAsync(Id);
        reservationStatuses = await ReservationService.GetReservationStatusesAsync();
        mealPlans = await ReservationService.GetMealPlansAsync();
        guests = await ReservationService.GetGuestsByReservationIdAsync(Id);
        rooms = await RoomService.GetRooomsAsync();
        invoices = await InvoiceService.GetInvoiceByReservationIdAsync(Id);
        reservations = await ReservationService.GetReservationsAsync();
    }

    private async Task HandleValidSubmit()
    {
        try
        {

            await ReservationService.UpdateReservationAsync(reservation);
            NavigationManager.NavigateTo("/rezervace");
        }
        catch (Exception ex)
        {
        }
    }

    private void NavigateToCustomerDetail()
    {
        NavigationManager.NavigateTo($"/zakaznik/{reservation.CustomerId}");
    }

    private void NavigateToInvoiceDetail(int id)
    {
        NavigationManager.NavigateTo($"/faktura/{id}");
    }
}
