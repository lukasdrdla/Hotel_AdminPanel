@page "/testing"
@using System.Globalization
@using iTextSharp.text
@using iTextSharp.text.pdf
@inject IRoomService RoomService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<h3 class="mb-4 page-title">Button to generate PDF server</h3>

<button class="btn btn-primary" @onclick="GeneratePdf">Generate PDF</button>


@code {
    private List<Room> rooms = new List<Room>();

    protected override async Task OnInitializedAsync()
    {
        rooms = await RoomService.GetRooomsAsync();
    }

    private async Task GeneratePdf()
    {
        Document document = new Document(iTextSharp.text.PageSize.A4, 50, 50, 25, 25);

        //save file to desktop
        PdfWriter writer = PdfWriter.GetInstance(document, new FileStream(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "/test.pdf", FileMode.Create));

        document.Open();

        //add rooms table
        PdfPTable table = new PdfPTable(3);
        table.AddCell("Room Number");
        table.AddCell("Room Type");
        table.AddCell("Price");

        foreach (var room in rooms)
        {
            table.AddCell(room.RoomNumber.ToString());
            table.AddCell(room.RoomType.Name);
            table.AddCell(room.Price.ToString());
        }

        document.Add(table);

        document.Close();
    }

}
