@page "/nastaveni-pokoju"
@inject IRoomService RoomService
@inject IJSRuntime jsRuntime
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<h3 class="text-center mb-4 page-title">Nastavení Pokojů</h3>

<!-- Modální okno -->
<div class="modal fade @((isModalVisible ? "show d-block" : ""))" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    @if (currentModalType == ModalType.RoomType)
                    {
                        @:Přidat Typ Pokoje
                    }
                    else if (currentModalType == ModalType.RoomStatus)
                    {
                        @:Přidat Status Pokoje
                    }
                </h5>
                <button type="button" class="btn-close" @onclick="HideModal"></button>
            </div>

            <div class="modal-body">
                <form>
                    @if (currentModalType == ModalType.RoomType)
                    {
                        <div class="mb-3">
                            <label for="roomTypeName" class="form-label">Název Typu</label>
                            <input id="roomTypeName" @bind="NewRoomType.Name" class="form-control" />
                        </div>
                    }
                    else if (currentModalType == ModalType.RoomStatus)
                    {
                        <div class="mb-3">
                            <label for="roomStatusName" class="form-label">Název Statusu</label>
                            <input id="roomStatusName" @bind="NewRoomStatus.Name" class="form-control" />
                        </div>
                    }
                </form>
            </div>

            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="HideModal">Zavřít</button>
                <button class="btn btn-primary" @onclick="AddNewEntity">Přidat</button>
            </div>
        </div>
    </div>
</div>



<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h4>Typy Pokojů</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Typ</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var roomType in RoomTypes)
                    {
                         <tr>
                            
                             @if(editRoomTypeId == roomType.Id)
                             {
                                 <td class="w-25"><input @bind="roomType.Id" class="form-control" disabled /></td>
                                 <td><input @bind="roomType.Name" class="form-control w-100" /></td>
                                 <td>
                                     <button class="btn btn-success btn-sm" @onclick="() => SaveRoomType(roomType)">
                                         <i class="bi bi-check"></i>
                                     </button>
                                     <button class="btn btn-danger btn-sm" @onclick="() => CancelEditRoomType(roomType)">
                                         <i class="bi bi-x"></i>
                                     </button>
                                 </td>
                             }
                             else
                             {
                                 <td>@roomType.Id</td>
                                 <td>@roomType.Name</td>
                                 <td>
                                     <button class="btn btn-primary btn-sm" @onclick="() => EditRoomType(roomType.Id)">
                                         <i class="bi bi-pencil"></i>
                                     </button> 

                                     <button class="btn btn-danger btn-sm" @onclick="() => DeleteRoomType(roomType.Id)">
                                         <i class="bi bi-trash"></i>
                                     </button>
                                 </td>


                             }

                        </tr>

                    }
                    <button class="btn btn-primary" @onclick="ShowModalForRoomType"><i class="bi bi-plus-square"></i></button>

                </tbody>
            </table>
        </div>

        <div class="col-md-6">
            <h4>Statusy Pokojů</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var roomStatus in RoomStatuses)
                    {
                        <tr>

                            @if (editRoomStatusId == roomStatus.Id)
                            {
                                <td class="w-25"><input @bind="roomStatus.Id" class="form-control" disabled /></td>
                                <td><input @bind="roomStatus.Name" class="form-control w-100" /></td>
                                <td>
                                    <button class="btn btn-success btn-sm" @onclick="() => SaveRoomStatus(roomStatus)">
                                        <i class="bi bi-check"></i>
                                    </button>
                                    <button class="btn btn-danger btn-sm" @onclick="() => CancelEditRoomStatus(roomStatus)">
                                        <i class="bi bi-x"></i>
                                    </button>
                                </td>
                            }
                            else
                            {
                                <td>@roomStatus.Id</td>
                                <td>@roomStatus.Name</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" @onclick="() => EditRoomStatus(roomStatus.Id)">
                                        <i class="bi bi-pencil"></i>
                                    </button>

                                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteRoomStatus(roomStatus.Id)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            }

                        </tr>
                    }

                    <button class="btn btn-primary" @onclick="ShowModalForRoomStatus"><i class="bi bi-plus-square"></i></button>

                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private List<RoomType> RoomTypes = new List<RoomType>();
    private List<RoomStatus> RoomStatuses = new List<RoomStatus>();

    private int? editRoomTypeId;
    private int? editRoomStatusId;

    private bool isModalVisible = false;
    private ModalType currentModalType = ModalType.None;


    private RoomType NewRoomType = new RoomType();
    private RoomStatus NewRoomStatus = new RoomStatus();

    private async Task AddNewEntity()
    {
        if (currentModalType == ModalType.RoomType)
        {
            await RoomService.CreateRoomTypeAsync(NewRoomType);
            RoomTypes = await RoomService.GetRoomTypesAsync();
        }
        else if (currentModalType == ModalType.RoomStatus)
        {
            await RoomService.CreateRoomStatusAsync(NewRoomStatus);
            RoomStatuses = await RoomService.GetRoomStatusesAsync();
        }

        HideModal();  // Zavřít modál a resetovat stav
    }

    private void HideModal()
    {
        isModalVisible = false;
        currentModalType = ModalType.None;
        NewRoomType = new RoomType();  // Reset formuláře pro typ pokoje
    }

    private void ShowModalForRoomType()
    {
        currentModalType = ModalType.RoomType;
        isModalVisible = true;
    }

    private void ShowModalForRoomStatus()
    {
        currentModalType = ModalType.RoomStatus;
        isModalVisible = true;
    }



    private void EditRoomType(int id)
    {
        editRoomTypeId = id;
    }

    private void EditRoomStatus(int id)
    {
        editRoomStatusId = id;
    }


    private void CancelEditRoomStatus(RoomStatus roomStatus)
    {
        editRoomStatusId = null;
    }

    private void CancelEditRoomType(RoomType roomType)
    {
        editRoomTypeId = null;
    }

    private async Task SaveRoomType(RoomType roomType)
    {
        await RoomService.UpdateRoomTypeAsync(roomType);
        editRoomTypeId = null;
    }

    private async Task SaveRoomStatus(RoomStatus roomStatus)
    {
        await RoomService.UpdateRoomStatusBySettingsAsync(roomStatus);
        editRoomStatusId = null;
    }

    private async Task DeleteRoomType (int id)
    {
        var roomType = RoomTypes.FirstOrDefault(rt => rt.Id == id);
        if (roomType != null)
        {
            var confirmResult = await jsRuntime.InvokeAsync<bool>("confirm", "Opravdu chcete smazat tento typ pokoje?");
            if (confirmResult)
            {
                await RoomService.DeleteRoomTypeAsync(id);
                RoomTypes = await RoomService.GetRoomTypesAsync();
            }
        }
    }

    private async Task DeleteRoomStatus(int id)
    {
        var roomStatus = RoomStatuses.FirstOrDefault(rs => rs.Id == id);
        if (roomStatus != null)
        {
            var confirmResult = await jsRuntime.InvokeAsync<bool>("confirm", "Opravdu chcete smazat tento status pokoje?");
            if (confirmResult)
            {
                await RoomService.DeleteRoomStatusAsync(id);
                RoomStatuses = await RoomService.GetRoomStatusesAsync();
            }
        }
    }
    

    protected override async Task OnInitializedAsync()
    {
        RoomTypes = await RoomService.GetRoomTypesAsync();
        RoomStatuses = await RoomService.GetRoomStatusesAsync();
    }

    public enum ModalType
    {
        None,
        RoomType,
        RoomStatus
    }
}
