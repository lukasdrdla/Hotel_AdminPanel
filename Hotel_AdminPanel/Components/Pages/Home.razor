@page "/"
@using ChartJs.Blazor.PieChart
@inject NavigationManager Navigation
@inject IRoomService RoomService
@inject ICustomerService CustomerService
@inject IReservationService ReservationService
@rendermode InteractiveServer

<PageTitle>Dashboard - Hotel Management</PageTitle>
<div class="container">
    <div class="row">
        <div class="col-lg-3">
            <div class="card border-0 shadow-sm mx-auto">
                <div class="card-body">
                    <p>
                        <i class="bi bi-people-fill"></i>
                        Počet zákazníků
                    </p>
                    <h3>@TotalCustomers</h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card border-0 shadow-sm mx-auto">
                <div class="card-body">
                    <p>
                        <i class="bi bi-calendar-check"></i>
                        Počet rezervací
                    </p>
                    <h3>@TotalReservations</h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card border-0 shadow-sm mx-auto">
                <div class="card-body">
                    <p>
                        <i class="bi bi-house-door"></i>
                        Počet pokojů
                    </p>
                    <h3>@TotalRooms</h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card border-0 shadow-sm mx-auto">
                <div class="card-body">
                    <p>
                        <i class="bi bi-cash"></i> <!-- Ikona pro peníze -->
                        Příjem poslední měsíc
                    </p>
                    <h3>@TotalRevenue.ToString("C2")</h3> <!-- Zobrazení celkového zisku s formátováním -->
                </div>
            </div>
        </div>


    </div>

    <div class="row mt-4 d-flex">
        <div class="col-lg-8 d-flex">
            <div class="card border-0 shadow-sm mx-auto flex-fill">
                <div class="card-body chart-container">
                    <Chart Config="_config"></Chart>
                </div>
            </div>
        </div>
        <div class="col-lg-4 d-flex ">
            <div class="card border-0 shadow-sm mx-auto flex-fill">
                <div class="card-body">
                    <Chart Config="_pieConfig"></Chart>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-lg-12">
            <div class="card border-0 shadow-sm mx-auto">
                <div class="card-body">
                    <h3 class="text-center mb-4 page-title">Rezervace</h3>
                    <div class="table-responsive">
                        <table class="w-100">
                            <QuickGrid Items="reservations.AsQueryable()" Pagination="paginationState" Class=" w-100">
                                <PropertyColumn Title="Zákazník" Property="@(x => x.Customer.FirstName + " " + x.Customer.LastName)" Sortable="true" />
                                <PropertyColumn Title="CheckIn" Property="@(x => x.CheckIn.ToShortDateString())" Sortable="true" />
                                <PropertyColumn Title="CheckOut" Property="@(x => x.CheckOut.ToShortDateString())" Sortable="true" />
                                <PropertyColumn Title="Pokoj" Property="@(x => x.Room.RoomNumber)" Sortable="true" />
                                <PropertyColumn Title="Cena" Property="@(x => x.TotalPrice)" Sortable="true" />
                                <PropertyColumn Title="Dospělí" Property="@(x => x.Adults)" Sortable="true" />
                                <PropertyColumn Title="Děti" Property="@(x => x.Children)" Sortable="true" />
                                <PropertyColumn Title="Stravování" Property="@(x => x.MealPlan.Name)" Sortable="true" />
                            </QuickGrid>
                            <Paginator State="paginationState" />
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .chart-container {
        overflow: hidden; /* Zajišťuje, že překročené části nebudou zobrazeny */
    }
</style>
 
@code {
    private int TotalReservations;
    private int TotalCustomers;
    private int TotalRooms;
    private double HotelOccupancy;
    private int occupiedRooms;
    private List<Reservation> reservationsLastMonth = new List<Reservation>();
    private List<Reservation> upcomingReservations = new List<Reservation>();
    private List<Reservation> reservations = new List<Reservation>();
    private PaginationState paginationState = new PaginationState() { ItemsPerPage = 5 };
    private List<Room> maintenanceRooms = new List<Room>();
    private List<Customer> customers = new List<Customer>();
    private decimal TotalRevenue;

    private BarConfig _config = new BarConfig();
    private PieConfig _pieConfig = new PieConfig();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            _config = GenerateBarChart(reservations);
            _pieConfig = GeneratePieChart();
            await InvokeAsync(() => StateHasChanged());
        }
    }


    protected override async Task OnInitializedAsync()
    {

        TotalCustomers = (await CustomerService.GetCustomersAsync()).Count;
        TotalReservations = (await ReservationService.GetReservationsAsync()).Count;
        TotalRooms = (await RoomService.GetRooomsAsync()).Count;

        reservations = await ReservationService.GetReservationsAsync();



        occupiedRooms = (await RoomService.GetRooomsAsync()).Where(r => r.RoomStatus.Name == "Obsazeno").Count();
        reservationsLastMonth = (await ReservationService.GetReservationsAsync()).Where(r => r.CheckIn.Month == DateTime.Now.AddMonths(-1).Month).ToList();

        TotalRevenue = reservationsLastMonth.Sum(r => r.TotalPrice);

        upcomingReservations = (await ReservationService.GetReservationsAsync()).Where(r => r.CheckIn.Date == DateTime.Today || r.CheckOut.Date == DateTime.Today).ToList();
        customers = await CustomerService.GetCustomersAsync();
        // Vytíženost hotelu
        HotelOccupancy = ((double)occupiedRooms / TotalRooms) * 100;


    }


    private BarConfig GenerateBarChart(List<Reservation> reservations)
    {
        var config = new BarConfig
            {
                Options = new BarOptions
                {
                    Responsive = true,
                    Title = new OptionsTitle
                    {
                        Display = true,
                        Text = "Počty rezervací podle měsíců"
                    },

                    AspectRatio = 1,
                    MaintainAspectRatio= false

                }

            };

        var months = new[] { "Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec" };
        foreach (var month in months)
        {
            config.Data.Labels.Add(month);
        }

        int[] monthlyReservationCounts = new int[12];

        foreach (var reservation in reservations)
        {
            var month = reservation.CheckIn.Month; 
            monthlyReservationCounts[month - 1]++;
        }

        var dataset = new BarDataset<int>(monthlyReservationCounts)
            {
                Label = "Počet rezervací",
                BackgroundColor = ColorUtil.RandomColorString(),
                BorderColor = ColorUtil.RandomColorString(),
                BorderWidth = 1
            };

        config.Data.Datasets.Add(dataset);

        return config;
    }

    private PieConfig GeneratePieChart()
    {
        var config = new PieConfig
            {
                Options = new PieOptions
                {
                    Responsive = true,
                    Title = new OptionsTitle
                    {
                        Display = true,
                        Text = "Počty zákazníků podle věku"
                    },
                    AspectRatio = 1.1
                }
            };

        // Věkové kategorie
        var ageCategories = new[] { "<20", "20-39", "40-59", "60+" };
        foreach (var category in ageCategories)
        {
            config.Data.Labels.Add(category);
        }

        int[] ageCategoryCounts = new int[4];

        foreach (var customer in customers)
        {
            var age = DateTime.Now.Year - customer.DateOfBirth.Year;

            if (age < 20)
            {
                ageCategoryCounts[0]++;
            }
            else if (age >= 20 && age < 40)
            {
                ageCategoryCounts[1]++;
            }
            else if (age >= 40 && age < 60)
            {
                ageCategoryCounts[2]++;
            }
            else if (age >= 60)
            {
                ageCategoryCounts[3]++;
            }
        }

        var dataset = new PieDataset<int>(ageCategoryCounts)
            {
                BackgroundColor = new[] { "#FF6384", "#36A2EB", "#FFCE56", "#4BC0C0" }, // Nastavení barev
                BorderColor = new[] { "#FF6384", "#36A2EB", "#FFCE56", "#4BC0C0" },
                BorderWidth = 1
            };

        config.Data.Datasets.Add(dataset);

        return config;
    }

}
