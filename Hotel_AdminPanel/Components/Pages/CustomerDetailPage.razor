@page "/customer/{Id:int}"
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="container mt-5">
    @if (customer == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <p class="mt-2">Loading customer details...</p>
        </div>
    }
    else
    {
        <div class="card border-0 shadow-sm mx-auto" style="max-width: 400px;">
            <div class="card-body">
                <h3 class="card-title text-center mb-4">Edit Customer Details</h3>

                <EditForm Model="customer" OnValidSubmit="HandleValidSubmit" FormName="EditCustomer">
                    <dl class="row text-center">
                        <dt class="col-12">First Name</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.FirstName" />
                        </dd>

                        <dt class="col-12">Last Name</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.LastName" />
                        </dd>

                        <dt class="col-12">Email</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.Email" />
                        </dd>

                        <dt class="col-12">Phone</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.Phone" />
                        </dd>

                        <dt class="col-12">Address</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.Address" />
                        </dd>

                        <dt class="col-12">City</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.City" />
                        </dd>

                        <dt class="col-12">Country</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.Country" />
                        </dd>

                        <dt class="col-12">Postal Code</dt>
                        <dd class="col-12">
                            <InputText class="form-control" @bind-Value="customer.PostalCode" />
                        </dd>
                    </dl>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <a href="/customers" class="btn btn-outline-secondary ml-2">Back to List</a>
                        <button type="button" class="btn btn-danger mt-4 ml-2" @onclick="HandleRemoveCustomer">Remove Customer</button>
                    </div>
                </EditForm>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Customer customer { get; set; } = new Customer();

    protected override async Task OnInitializedAsync()
    {
        customer = await CustomerService.GetCustomerByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await CustomerService.UpdateCustomerAsync(customer);
        NavigationManager.NavigateTo("/customers");

    }

    private async Task HandleRemoveCustomer()
    {
        await CustomerService.DeleteCustomerAsync(Id);
        NavigationManager.NavigateTo("/customers");
    }
}
