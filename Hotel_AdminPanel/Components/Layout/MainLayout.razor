@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage


<style>
    .dark-theme {
        background-color: #2c3e50;
        color: #ffffff;
    }

    .light-theme {
        background-color: white;
        color: #000000;
    }
</style>

<div class="page @(selectedTheme == "dark" ? "dark-theme" : "light-theme")">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="alert alert-primary" role="alert">
            Aplikace se nachází ve vývoji. Některé funkce nemusí být dostupné
            @if (isAuthenticated)
            {
                <div class="user-info d-flex align-items-center">
                    <span class="font-weight-bold me-2">Přihlášený uživatel:</span>
                    <span class="user-name badge bg-secondary">@userName</span>
                </div>
            }
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    private string userName;
    private bool isAuthenticated;
    private string selectedTheme = "light";


    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAuthenticated = user.Identity.IsAuthenticated;
        userName = isAuthenticated ? user.Identity.Name : string.Empty;

        var storedTheme = await LocalStorage.GetItemAsync<string>("theme");
        if (storedTheme != null)
        {
            selectedTheme = storedTheme;
        }



    }

  

  
}


