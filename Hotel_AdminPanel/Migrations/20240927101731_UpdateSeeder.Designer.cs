// <auto-generated />
using System;
using Hotel_AdminPanel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_AdminPanel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240927101731_UpdateSeeder")]
    partial class UpdateSeeder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel_AdminPanel.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Křižíkova 123",
                            City = "Prague",
                            Country = "Czech Republic",
                            Email = "josef.k@gmail.com",
                            FirstName = "Josef",
                            LastName = "Kramář",
                            Phone = "+420 123 456 789",
                            PostalCode = "123 45"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Malostranská 456",
                            City = "Brno",
                            Country = "Czech Republic",
                            Email = "anna.novakova@email.cz",
                            FirstName = "Anna",
                            LastName = "Nováková",
                            Phone = "+420 987 654 321",
                            PostalCode = "602 00"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hlavní 789",
                            City = "Ostrava",
                            Country = "Czech Republic",
                            Email = "petr.svoboda@email.cz",
                            FirstName = "Petr",
                            LastName = "Svoboda",
                            Phone = "+420 321 654 987",
                            PostalCode = "700 30"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Nádražní 321",
                            City = "Plzeň",
                            Country = "Czech Republic",
                            Email = "lucie.cerna@email.cz",
                            FirstName = "Lucie",
                            LastName = "Černá",
                            Phone = "+420 654 321 987",
                            PostalCode = "301 00"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Masarykova 123",
                            City = "Liberec",
                            Country = "Czech Republic",
                            Email = "jan.dvorak@email.cz",
                            FirstName = "Jan",
                            LastName = "Dvořák",
                            Phone = "+420 741 852 963",
                            PostalCode = "460 01"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Tylova 456",
                            City = "Olomouc",
                            Country = "Czech Republic",
                            Email = "katerina.vesela@email.cz",
                            FirstName = "Kateřina",
                            LastName = "Veselá",
                            Phone = "+420 951 753 852",
                            PostalCode = "779 00"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Husova 789",
                            City = "Hradec Králové",
                            Country = "Czech Republic",
                            Email = "miroslav.prochazka@email.cz",
                            FirstName = "Miroslav",
                            LastName = "Procházka",
                            Phone = "+420 369 852 147",
                            PostalCode = "500 02"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Karlova 321",
                            City = "České Budějovice",
                            Country = "Czech Republic",
                            Email = "eva.horakova@email.cz",
                            FirstName = "Eva",
                            LastName = "Horáková",
                            Phone = "+420 753 159 357",
                            PostalCode = "370 01"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Jiráskova 456",
                            City = "Zlín",
                            Country = "Czech Republic",
                            Email = "tomas.kral@email.cz",
                            FirstName = "Tomáš",
                            LastName = "Král",
                            Phone = "+420 963 852 741",
                            PostalCode = "760 01"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Slovanská 789",
                            City = "Pardubice",
                            Country = "Czech Republic",
                            Email = "alena.benesova@email.cz",
                            FirstName = "Alena",
                            LastName = "Benešová",
                            Phone = "+420 852 147 963",
                            PostalCode = "530 02"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Štefánikova 123",
                            City = "Karlovy Vary",
                            Country = "Czech Republic",
                            Email = "vladimir.zeleny@email.cz",
                            FirstName = "Vladimír",
                            LastName = "Zelený",
                            Phone = "+420 159 753 357",
                            PostalCode = "360 01"
                        });
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MealPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Plan = "Bez Jídla",
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            Plan = "Snídaně",
                            Price = 0m
                        },
                        new
                        {
                            Id = 3,
                            Plan = "Polo Penze",
                            Price = 0m
                        },
                        new
                        {
                            Id = 4,
                            Plan = "All-Inclusive",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RStatus = "Rezervováno"
                        },
                        new
                        {
                            Id = 2,
                            RStatus = "CheckedIn"
                        },
                        new
                        {
                            Id = 3,
                            RStatus = "Dokončeno"
                        },
                        new
                        {
                            Id = 4,
                            RStatus = "Zrušeno"
                        });
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAdults")
                        .HasColumnType("int");

                    b.Property<int>("MaxChildren")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomStatusId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomStatusId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Image = "",
                            MaxAdults = 2,
                            MaxChildren = 0,
                            Price = 1200m,
                            RoomNumber = "A101",
                            RoomStatusId = 1,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Image = "",
                            MaxAdults = 2,
                            MaxChildren = 1,
                            Price = 2000m,
                            RoomNumber = "A102",
                            RoomStatusId = 1,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Image = "",
                            MaxAdults = 4,
                            MaxChildren = 2,
                            Price = 4200m,
                            RoomNumber = "A103",
                            RoomStatusId = 1,
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Image = "",
                            MaxAdults = 2,
                            MaxChildren = 2,
                            Price = 3250m,
                            RoomNumber = "A104",
                            RoomStatusId = 1,
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Image = "",
                            MaxAdults = 2,
                            MaxChildren = 1,
                            Price = 2300m,
                            RoomNumber = "A105",
                            RoomStatusId = 1,
                            RoomTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            Image = "",
                            MaxAdults = 2,
                            MaxChildren = 0,
                            Price = 5350m,
                            RoomNumber = "A106",
                            RoomStatusId = 1,
                            RoomTypeId = 6
                        });
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.RoomStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Volno"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Obsazeno"
                        });
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Double"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Studio"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Suite"
                        },
                        new
                        {
                            Id = 5,
                            Type = "MiniSuite"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Presidential"
                        });
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.Reservation", b =>
                {
                    b.HasOne("Hotel_AdminPanel.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_AdminPanel.Models.MealPlan", "MealPlan")
                        .WithMany()
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_AdminPanel.Models.ReservationStatus", "ReservationStatus")
                        .WithMany()
                        .HasForeignKey("ReservationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_AdminPanel.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("MealPlan");

                    b.Navigation("ReservationStatus");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel_AdminPanel.Models.Room", b =>
                {
                    b.HasOne("Hotel_AdminPanel.Models.RoomStatus", "RoomStatus")
                        .WithMany()
                        .HasForeignKey("RoomStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_AdminPanel.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomStatus");

                    b.Navigation("RoomType");
                });
#pragma warning restore 612, 618
        }
    }
}
